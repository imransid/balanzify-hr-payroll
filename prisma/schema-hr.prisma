generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-musl-arm64-openssl-3.0.x", "linux-arm64-openssl-3.0.x", "debian-openssl-3.0.x"]
  output        = "./generated/hr"
}

datasource db {
  provider = "postgresql"
  url      = env("HR_DATABASE_URI")
}

model holiday {
  id           Int      @id @default(autoincrement())
  name         String
  fromDate     DateTime
  toDate       DateTime
  country      String
  weekend      String
  totalHoliday String
  status       Boolean
  color        String

  createdBy Int?
  createdAt DateTime  @default(now())
  updateAt  DateTime? @default(now())
}

model Leave {
  id                 Int     @id @default(autoincrement())
  leaveName          String
  displayName        String
  definition         String
  color              String
  leaveType          String
  maxLeaveAllocation Int
  status             Boolean

  createdBy Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now())
}

model designation {
  id              Int    @id @default(autoincrement())
  designationName String
  designation     String

  createdBy Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now())
}

model deductionContribution {
  id                        Int     @id @default(autoincrement())
  title                     String
  deductionContributionType String
  type                      String
  taxOptions                String
  status                    Boolean

  createdBy Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now())
}

model LeaveType {
  id          Int    @id @default(autoincrement())
  leaveName   String
  displayName String
  definition  String
  color       String

  leaveTypeHourly  Int
  leaveTypeMaxHour Int

  maxLeaveAllocation         Int
  allowLeaveApplicationAfter Int
  maxConsecutiveLeave        Int

  maxCarryForwardedLeaves    Int?
  expireCarryForwardedLeaves Int?

  allowEncashment     Boolean
  maxEncashableLeaves Int?
  minEncashableLeaves Int?
  earningComponents   String?

  isEarnedLeaves     Boolean
  earnLeaveFragrancy String?
  allocatedOnDays    String?
  Rounders           String?

  isLeaveWithoutPay                  Boolean @default(false)
  isOptionalLeaves                   Boolean @default(false)
  allowNegativeBalance               Boolean @default(false)
  allowOverAllocation                Boolean @default(false)
  includeHolidaysWithinLeavesONLeave Boolean @default(false)
  isCompensatory                     Boolean @default(false)

  createdBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
